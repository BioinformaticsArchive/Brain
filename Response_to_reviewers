Dear Reviewers,

Thanks for the constructive feedback we have received. Following your recommendations we have extensively revised the manuscript in order
to focus it more on the capabilities of the library. The arguments about databases and RDF have been removed from the text too as a will of




Here are the comments of the reviewers:
----------------------------------------
Reviewer: 1
Comments to the Author
The authors present a library - "Brain" - that acts as a "facade" over the more complex OWL API.  The library provides a more straightforward interface for functions commonly required by individuals who need to construct and/or query a semantic web knowledge-base.  Three features in particular are stressed by the authors:  First, the library exposes only the EL profile of OWL, which they claim (unsupported) is sufficient to represent the features of most biomedical ontologies,and the features of existing relational database schema.  Second, the interface is string-based, allowing interaction with the ontology through Manchester syntax.  Finally, the interface attempts to hide prefixes and URIs by insisting that all entities have a unique name.

I agree with the authors about the need for such a tool, and from reading the API documentation, it appears that they have done an excellent job of simplifying what are otherwise complicated interactions.  Well done!!  An application note in Bioinformatics seems to be an appropriate choice, given the broad applicability of this work to the biomedical informatics community.  I do have some significant concerns about the manuscript, however, and I believe it would have a much greater impact on the community - the impact it deserves - if it were extensively revised.

Major Revisions
My primary concern is that the manuscript contains very little information about Brain, while providing excessive (possibly even inappropriate) background information and discussions/comparisons that do little to clarify the author's message.  Application Notes are brief, so the authors need to "get to the point" much more rapidly.  There seems to be little utility in the repetitive description of relational databases, which begins sections 1 and 2, since those aren't what Brain operates on.  Moreover, it seems to be a bit misleading to be discussing relational databases in any case - from reading the Brain documentation, it does not appear that there are any functions that operate on Instance data, so it really only manipulates the model, not the data - as the title of their paper suggests.  The entire first paragraph really could be removed, and the motivation be simply "Manipulation of biomedical knowledge in-code is complicated by the OWL-API, which is designed to manage the full range of OWL axiomatic manipulations.  A subset of these, following the computationally tractable EL profile of OWL, covers the majority of use-cases in the biomedical domain.  We therefore create a facade that exposes the most common.... blah blah".

The last few sentences of Section 2 are not clear.  The sentences "OWL is often expressed in combination with RDF........ rather than being oriented towards the consumption of RDF data" could benefit from being completely re-written.  From what I understand, the authors are making the point that I make above - that Brain doesn't manipulate data, but rather only manipulates the model.  This makes me again feel that the discussion of relational databases is a red-herring.  Their tool manipulates OWL ontologies, so why not simply say it that plainly?  (personally, I tend to only use the phrase "knowledge-base" when I am describing the combination of an ontology and its instances, just to keep these issues clear, but I may be alone in making that distinction)

Section 3 begins with a questionable and unsupported claim ("Knowledge representation in the biomedical domain differs from other disciplines") that adds nothing to their discussion.  The explanation of what axioms are, etc, might also be excessive background, given that the manuscript is clearly aimed at readers who are creating ontologies, and therefore should already know what axioms are.  The discussion of Elk reasoning is, again, likely excessive though I understand why it is there; however, not at the expense of the lack of a single example of what their code can do.

The first sentence of Section 4 "Programmatic features" really should be the first sentence of the manuscript, and the first few sentences of section 4 are redundant to things said in the second paragraph of section 1.    Moreover, very little of what is described in section 4 are "programmatic features", in my opinion.

Making these suggested changes would then give the authors ample space to describe the scope of their API, and provide an example or two - the examples in their code documentation are great, and very clear (and compelling!)  It would be much better to have one or two of these simple examples in the manuscript than to point (twice) to the supplementary material.  The simplicity of the examples, in my opinion, make their case for them!  It's a shame to not include their best evidence in the manuscript itself.

The authors mention data integration as a problem in various places, including the conclusion, yet don't really explain how their software improves data integration.  In fact, they seem to go out of their way to point-out that they don't manipulate data at all.

Overall, this Application Note doesn't seem to spend much space discussing the application, and it was necessary to go to the supplementary information to get even a hint of what the application can and cannot do.  This is a shame, because the library itself is so obviously useful and well-crafted!

Minor revisions:

- page 2 line 12 "surpassing THOSE available in the Structured Query Language"
- "the name of the classes are displayed in a convenient way" - I believe this is referring to the requirement of "unique names" in Brain.  Since this was, for me, one of the most worrisome aspects of their software (I wonder how/if that will work in the wild wild Web?), that sentence is a bit too opaque, in my opinion.

I look forward to seeing the revisions, and I am certainly going to encourage my group to use this software!

Best wishes,

Mark

--
Mark Wilkinson
CBGP - UPM
Madrid


Reviewer: 2
Comments to the Author


This is a good app note describing an API which addresses a real problem. The
ability to build ontologies computationally is needed and is currently too
complex. The provision of a comformatable facade is a useful and necessary
piece of work.

The paper itself is fine. I have one major concern. By itself the paper
describes lots of things but points always to supplementary material as a
place to find more. I cannot understand this. Either the work is valuable, in
which case it should be presented in the paper. It makes no sense to include
material which is explanatory as supplementary. Especially as I don't have
access to it.

Minor issues:

The authors say strings are good for a variety of reasons. However, strings
are often bad because they loose safety at compile time (and potentially at
run time). Some comment on this and whether this is true for the authors
library would be good.

Neither the RDF Primer nor the OWL Tools references are terribly resolvable. A
URI would be nice.


Reviewer: 3
Comments to the Author
The authors propose a java interface to what is apparently an in-memory OWL ontology builder and reasoner (Elk only?). Interestingly, it is proposed to bridge the gap between the OWL-API and GUIs, such as in the role of interpreter, where it parses and answers requests, possibly in the context of a Web Service or an OWL endpoint. The API is also similar to the Manchester Syntax. However, this prime motivation is stated on the second page. For this reason, this reviewer was puzzling over the intended application of Brain until the second page. However, I am still not sure what I would want to build using Brain as opposed to a number of other tools that do similar things. I suppose that the Manchester Syntax similarity is supposed to be more appealing and simpler than OWL-API.

Strangely, although Protege is named, TopBraid Composer is not, which has many of the same features, as well as the ability to SPARQL query the ontology being edited - an important feature for interoperability. Neither is OWLIM mentioned, which supports several types of reasoning, including RDFS, which is not mentioned as a type of reasoning in Brain but which, in combination with SPARQL, supports answering the provided example GO query from the supplemental material with subsumption reasoning.

It seems as though the importance of SPARQL for interoperability is dismissed in the statement, "Knowledge-bases and ontologies can therefore be built without being necessarily expressed as RDF triples while still preserving all advantages in regards to data integration and interoperability." I strongly disagree. You apparently miss the advantage of being able to use SPARQL, as well as OWL in Brain. By not supporting an RDF representation of the ontology, you exclude the possibility of data integration that combines data from different knowledge bases/triplestores, as would occur in query federation across knowledge bases. Also, RDF representation would make it possible to run more tools on the knowledge base such as other reasoners, as well as easily transfer and share the contents. So, Brain doesn't retain _all_ advantages.

I recommend that the authors do a minor revision addressing the above 3 issues.

Language:

real-life biomedical applications -> biomedical applications
(RDF) enables the exposition of -> (RDF) enables the disclosure of ->
knowledge-bases -> knowledge bases
Brain appreciates this aspect -> Brain addresses this aspect
surpassing whose available -> surpassing those available
requiring a deeper control -> requiring more control
can take advantage the OWL API -> can take advantage of the OWL API
for semantic web purposes -> for Semantic Web purposes

